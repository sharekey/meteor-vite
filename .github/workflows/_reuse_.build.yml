name: 'Reusable: Build'
on:
  workflow_call:
    inputs:
      appBasename:
        required: true
        type: string
      meteorRelease:
        type: string
        default: '3.2'
      nodeVersion:
        type: string
        default: '22-alpine'
      push:
        type: boolean
        default: false
      imageRegistry:
        type: string
        default: ghcr.io
      meteorBaseImage:
        type: string
        default: jorgenvatle/meteor-base
    outputs:
      deploymentImage:
        value: ${{ jobs.docker.outputs.deploymentImage }}
      imageVersion:
        value: ${{ jobs.docker.outputs.imageVersion }}
      meteorRelease:
        value: ${{ jobs.docker.outputs.meteorRelease }}

jobs:
  ubuntu:
    name: 'Ubuntu 🐧'
    runs-on: ubuntu-latest
    if: inputs.push != true
    timeout-minutes: 10
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4
      - name: 'Setup Meteor'
        uses: meteorengineer/setup-meteor@v1
        with:
          meteor-release: ${{ inputs.meteorRelease }}

      - name: 'Install dependencies'
        run: meteor npm i

      - name: 'Build packages'
        run: meteor npm run build:packages

      - name: 'Build for production'
        run: meteor npm run build ${{ inputs.appBasename }}

  docker:
    runs-on: ubuntu-latest
    name: Docker 🐋
    outputs:
      deploymentImage: ${{ steps.image.outputs.deploymentImage }}
      imageVersion: ${{ steps.image.outputs.imageVersion }}
      meteorRelease: ${{ steps.image.outputs.meteorRelease }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Format image name
        id: image
        # language="bashsupport pro shell script"
        run: |
          meteorRelease="$(cat 'examples/${{ inputs.appBasename }}/.meteor/release' | cut -d '@' -f 2)"
          imageName="${{ inputs.imageRegistry }}/${{ github.repository_owner }}/meteor-vite/example/${{ inputs.appBasename }}"
          imageName="$(echo $imageName | tr '[:upper:]' '[:lower:]')"
          imageVersion="sha-${GITHUB_SHA:0:7}"

          echo "cacheTag=$imageName:buildcache" >> $GITHUB_OUTPUT
          echo "deploymentImage=$imageName:$imageVersion" >> $GITHUB_OUTPUT

          echo "imageName=$imageName" >> $GITHUB_OUTPUT
          echo "imageVersion=$imageVersion" >> $GITHUB_OUTPUT
          echo "meteorRelease=$meteorRelease" >> $GITHUB_OUTPUT

      - name: Prepare metadata
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: |
            ${{ steps.image.outputs.imageName }}

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: ${{ inputs.push && 'Build & Push' || 'Build' }}
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ inputs.push }}
          tags: |
            ${{ steps.image.outputs.deploymentImage }}
            ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            APP_BASENAME=${{ inputs.appBasename }}
            METEOR_RELEASE=${{ steps.image.outputs.meteorRelease }}
            METEOR_BASE_IMAGE=${{ inputs.meteorBaseImage }}
            NODE_VERSION=${{ inputs.nodeVersion }}

